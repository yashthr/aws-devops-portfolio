version: 0.2

env:
  variables:
    DOCKER_BUILDKIT: "1"
  parameter-store:
    ECR_REPO: "/prod/ecr/repository-url"
    CONTAINER_PORT: "/prod/app/container-port"
  secrets-manager:
    DOCKER_USERNAME: "prod/docker/username"
    DOCKER_PASSWORD: "prod/docker/password"

phases:
  install:
    runtime-versions:
      docker: 20
      python: 3.9
    commands:
      - pip install --upgrade pip
      - pip install --upgrade awscli
      
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPOSITORY_URI=${ECR_REPO}
      - echo Running security scans...
      - docker run --rm -v $(pwd):/app aquasec/trivy filesystem --exit-code 1 --severity HIGH,CRITICAL /app
  
  build:
    commands:
      - echo Building the Docker image...
      - |
        docker build \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from ${REPOSITORY_URI}:latest \
          -t ${REPOSITORY_URI}:${IMAGE_TAG} \
          -t ${REPOSITORY_URI}:latest .
      
  post_build:
    commands:
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - docker push ${REPOSITORY_URI}:latest
      - docker run --rm aquasec/trivy image ${REPOSITORY_URI}:${IMAGE_TAG}
      - |
        cat << EOF > imageDefinitions.json
        [{
          "name": "application",
          "imageUri": "${REPOSITORY_URI}:${IMAGE_TAG}"
        }]
        EOF

artifacts:
  files:
    - imageDefinitions.json
    - appspec.yaml
    - taskdef.json
  name: build-$(date +%Y-%m-%d)
